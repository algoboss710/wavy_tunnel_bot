import numpy as np

# Sample data
highs = np.array([10, 12, 15, 14, 13, 17, 16, 19, 18, 17])
lows = np.array([8, 7, 6, 9, 8, 11, 10, 9, 12, 11])

def detect_peaks_and_dips(highs, lows, peak_type):
    center_index = peak_type // 2
    peaks = []
    dips = []
    
    for i in range(center_index, len(highs) - center_index):
        peak_window = highs[i - center_index:i + center_index + 1]
        dip_window = lows[i - center_index:i + center_index + 1]
        
        if all(peak_window[center_index] > peak_window[j] for j in range(len(peak_window)) if j != center_index):
            peaks.append((i, highs[i]))
        
        if all(dip_window[center_index] < dip_window[j] for j in range(len(dip_window)) if j != center_index):
            dips.append((i, lows[i]))
    
    return peaks, dips

# Parameters
peak_type = 5

# Detect peaks and dips
peaks, dips = detect_peaks_and_dips(highs, lows, peak_type)

# Verifying the results
print("Peaks detected at indices and values:")
for peak in peaks:
    print(f"Index: {peak[0]}, Value: {peak[1]}")

print("\nDips detected at indices and values:")
for dip in dips:
    print(f"Index: {dip[0]}, Value: {dip[1]}")
